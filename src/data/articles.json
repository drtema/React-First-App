[
  {
    "id": 1,
    "title": "Перенаправление рефов",
    "text": "Перенаправление рефов позволяет автоматически передавать реф компонента одному из его дочерних элементов. Большинству компонентов перенаправление рефов не нужно, но оно может быть полезно, например, если вы пишете библиотеку. Рассмотрим наиболее частые сценарии.",
    "date": "Jul 28 2019 10:48:12"
  },
  {
    "id": 2,
    "title": "Фрагменты",
    "text": "Возврат нескольких элементов из компонента является распространённой практикой в React. Фрагменты позволяют формировать список дочерних элементов, не создавая лишних узлов в DOM.",
    "date": "Jul 28 2019 10:48:12"
  },
  {
    "id": 3,
    "title": "Компоненты высшего порядка",
    "text": "Компонент высшего порядка (Higher-Order Component, HOC) — это один из продвинутых способов для повторного использования логики. HOC не являются частью API React, но часто применяются из-за композиционной природы компонентов.",
    "date": "Jul 28 2019 10:48:12"
  },
  {
    "id": 4,
    "title": "Взаимодействие со сторонними библиотеками",
    "text": "React может использоваться в любом веб-приложении. Он может быть встроен в другие приложения, и, с некоторыми оговорками, другие приложения могут встраиваться в React. Это руководство рассматривает некоторые общие случаи, с упором на интеграцию с jQuery и Backbone. Те же подходы могут использоваться для интеграции компонентов с любым существующим кодом.",
    "date": "Jul 28 2019 10:48:12"
  },
  {
    "id": 5,
    "title": "JSX в деталях",
    "text": "SX — синтаксический сахар для функции React.createElement(component, props, ...children).",
    "date": "Jul 28 2019 10:48:12"
  },
  {
    "id": 6,
    "title": "Оптимизация производительности",
    "text": "https://i2-prod.leeds-live.co.uk/news/leeds-news/article15752393.ece/ALTERNATES/s615/0_800px-Savannah_Cat_portrait.jpg",
    "date": "Jul 28 2019 10:48:12"
  },
  {
    "id": 7,
    "title": "Оптимизация производительности",
    "text": "React использует несколько умных подходов для минимизации количества дорогостоящих DOM-операций, необходимых для обновления пользовательского интерфейса. Для многих приложений, использование React приведёт к быстрому пользовательскому интерфейсу без особых усилий по оптимизации производительности. Тем не менее, существует несколько способов ускорить React-приложение.",
    "date": "Jul 28 2019 10:48:12"
  },
  {
    "id": 8,
    "title": "Порталы",
    "text": "Порталы позволяют рендерить дочерние элементы в DOM-узел, который находится вне DOM-иерархии родительского компонента.",
    "date": "Jul 28 2019 10:48:12"
  },
  {
    "id": 9,
    "title": "React без ES6",
    "text": "Обычно компонент React определяется как простой JavaScript-класс: class Greeting extends React.Component",
    "date": "Jul 28 2019 10:48:12"
  },
  {
    "id": 10,
    "title": "React без JSX",
    "text": "JSX не является обязательным для работы с React. React можно использовать без JSX. Это особенно удобно, когда вы не хотите настраивать транспиляцию в процессе сборки.",
    "date": "Jul 28 2019 10:48:12"
  }
]